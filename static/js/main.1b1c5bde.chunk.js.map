{"version":3,"sources":["Components/Box.js","Pages/Global/index.js","Pages/Indonesia/index.js","Components/Column.js","Components/Table.js","Pages/Provinsi/index.js","App.js","reportWebVitals.js","index.js"],"names":["Box","title","confirm","recover","death","className","style","paddingLeft","color","value","displayType","thousandSeparator","renderText","Global","useState","Positif","Sembuh","Meninggal","dunia","setDunia","useEffect","axios","get","then","resp","data","confirmed","recovered","deaths","Indonesia","p","positif","sembuh","meninggal","indo","setIndo","console","log","Columns","Header","accessor","Table","provin","tableInstance","useTable","columns","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","padding","row","getRowProps","cells","cell","getCellProps","Provinsi","prov","setProv","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b1c5bde.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"../Components/component.css\"\r\nimport NumberFormat from 'react-number-format'\r\n\r\nconst Box = ({title, confirm, recover, death}) => {\r\n    \r\n    return (\r\n        <div className='body'>\r\n            <h1 style={{paddingLeft: \"1em\"}}>{title}</h1>\r\n            <div className='container'>\r\n                <span className='box'>\r\n                    <h2 style={{color: 'yellow'}}>Positif</h2>\r\n                    <NumberFormat value={confirm} displayType={'text'} thousandSeparator={true} renderText={value => <div style={{color: 'yellow'}}>{value}</div>} />\r\n                </span>\r\n                <span className='box'>\r\n                    <h2 style={{color: 'greenyellow'}}>Sembuh</h2>\r\n                    <NumberFormat value={recover} displayType={'text'} thousandSeparator={true} renderText={value => <div style={{color: 'greenyellow'}}>{value}</div>} />\r\n                </span>\r\n                <span className='box'>\r\n                    <h2 style={{color: 'red'}}>Meninggal</h2>\r\n                    <NumberFormat value={death} displayType={'text'} thousandSeparator={true} renderText={value => <div style={{color: 'red'}}>{value}</div>} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Box;\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from \"axios\"\r\nimport Box from '../../Components/Box';\r\n\r\nconst Global = () => {\r\n    const [dunia, setDunia] = useState({\r\n        Positif: 0,\r\n        Sembuh: 0,\r\n        Meninggal: 0\r\n    })\r\n    \r\n    useEffect(() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(\"https://covid19.mathdro.id/api\")\r\n\t\t\t\t.then((resp) => setDunia({\r\n                    Positif: resp.data.confirmed.value,\r\n                    Sembuh: resp.data.recovered.value,\r\n                    Meninggal: resp.data.deaths.value\r\n                }))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Box\r\n                title= \"Global\"\r\n                confirm= {dunia.Positif}\r\n                recover= {dunia.Sembuh}\r\n                death= {dunia.Meninggal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Global\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport Box from '../../Components/Box'\r\n\r\nconst Indonesia = (p) => {\r\n    const [indo, setIndo] = useState({\r\n        positif: 0,\r\n        sembuh: 0,\r\n        meninggal: 0\r\n    })\r\n    \r\n    useEffect(() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(\"https://covid19.mathdro.id/api/countries/indonesia\")\r\n\t\t\t\t.then((resp) => setIndo({\r\n                    positif: resp.data.confirmed.value,\r\n                    sembuh: resp.data.recovered.value,\r\n                    meninggal: resp.data.deaths.value\r\n                }))\r\n    }, [])\r\n    console.log(indo)\r\n    return (\r\n        <>\r\n            <Box \r\n                title=\"Indonesia\"\r\n                confirm= {indo.positif}\r\n                recover= {indo.sembuh}\r\n                death= {indo.meninggal}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Indonesia\r\n","export const Columns = [\r\n    {\r\n        Header: \"Provinsi\",\r\n        accessor: \"provinsi\"\r\n    },\r\n    {\r\n        Header: \"Positif\",\r\n        accessor: \"kasusPosi\"\r\n    },\r\n    {\r\n        Header: \"Sembuh\",\r\n        accessor: \"kasusSemb\"\r\n    },\r\n    {\r\n        Header: \"Meninggal\",\r\n        accessor: \"kasusMeni\"\r\n    }\r\n]","import React from 'react'\r\nimport { useTable } from 'react-table'\r\nimport { Columns } from './Column'\r\n\r\n\r\nconst Table = ({provin}) => {\r\n    const tableInstance = useTable({\r\n        columns: Columns,\r\n        data: provin\r\n    })\r\n    \r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n    } = tableInstance\r\n\r\n    return (\r\n        <table {...getTableProps()}>\r\n            <thead>\r\n                {headerGroups.map((headerGroup) => (\r\n                    <tr {...headerGroup.getHeaderGroupProps()}>\r\n                        {headerGroup.headers.map((column) => (\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                        ))}\r\n                    </tr>    \r\n                ))}\r\n            </thead>\r\n            <tbody style={{padding: 15}} {...getTableBodyProps()}>\r\n                {rows.map((row) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()} >\r\n                            {row.cells.map((cell) => {\r\n                                console.log(cell.data)\r\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                            })}\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport Table from '../../Components/Table'\r\n\r\nconst Provinsi = () => {\r\n    const [prov, setProv] = useState([])\r\n    \r\n    useEffect(() => {\r\n\t\t\taxios\r\n\t\t\t\t.get(\"https://indonesia-covid-19.mathdro.id/api/provinsi\")\r\n\t\t\t\t.then((resp) => setProv(resp.data.data))\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Table provin= {prov}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Provinsi\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport {BrowserRouter as Router, Link, Route, Switch} from \"react-router-dom\";\r\nimport {Global, Indonesia, Provinsi} from \"./Pages\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/Global\">Global</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/Indonesia\">Indonesia</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/Provinsi\">Per Provinsi</Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n      <Switch>\r\n        <Route path=\"/Global\">\r\n          <Global />\r\n        </Route>\r\n        <Route path=\"/Indonesia\">\r\n          <Indonesia />\r\n        </Route>\r\n        <Route path=\"/Provinsi\">\r\n          <Provinsi />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}